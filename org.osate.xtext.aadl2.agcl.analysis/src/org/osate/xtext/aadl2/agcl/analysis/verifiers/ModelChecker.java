/**
 */
package org.osate.xtext.aadl2.agcl.analysis.verifiers;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Model Checker</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@link org.osate.xtext.aadl2.agcl.analysis.verifiers.ModelChecker#getResourceContext <em>Resource Context</em>}</li>
 * </ul>
 * </p>
 *
 * @see org.osate.xtext.aadl2.agcl.analysis.verifiers.VerifiersPackage#getModelChecker()
 * @model abstract="true"
 * @generated
 */
public interface ModelChecker extends EObject {
	/**
	 * Returns the value of the '<em><b>Resource Context</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Resource Context</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Resource Context</em>' attribute.
	 * @see #setResourceContext(Resource)
	 * @see org.osate.xtext.aadl2.agcl.analysis.verifiers.VerifiersPackage#getModelChecker_ResourceContext()
	 * @model transient="true"
	 * @generated
	 */
	Resource getResourceContext();

	/**
	 * <!-- begin-user-doc -->
	 * Takes a model and a specification and produces a representation suitable to pass to the external
	 * model-checker, e.g., an object that contains (references to) some input file(s).
	 * 
	 * <p>This method must be implemented by subclasses.
	 * 
	 * @param model		a representation of the model to verify
	 * @param spec		a representation of the specification to verify
	 * @return an object encapsulating the input expected by the external model-checker
	 * <!-- end-user-doc -->
	 * @model required="true"
	 * @generated
	 */
	ModelCheckerInput prepareInput(Model model, Specification spec);

	/**
	 * <!-- begin-user-doc -->
	 * Takes an object containing the information generated by the external model-checker and turns it into
	 * a {@link VerificationResult} object.
	 * 
	 * <p>This method must be implemented by subclasses.
	 * 
	 * @param output	an object encapsulating the output produced by the external model-checker
	 * @return a {@link VerificationResult} object
	 * <!-- end-user-doc -->
	 * @model required="true"
	 * @generated
	 */
	VerificationResult processOutput(ModelCheckerOutput output);

	/**
	 * <!-- begin-user-doc -->
	 * Invokes an external model-checker by performing a system call.
	 * 
	 * <p> This method must be implemented by subclasses.
	 * 
	 * @param input   an object encapsulating the input expected by the model-checker 
	 * 					(e.g., containing references to input files provided to the model-checker)
	 * @return an object encapsulating the results produced by the model-checker
	 * 					(e.g., containing references to files produced by the model-checker) 
	 * <!-- end-user-doc -->
	 * @model required="true"
	 * @generated
	 */
	ModelCheckerOutput callExternal(ModelCheckerInput input);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model
	 * @generated
	 */
	VerificationResult checkSpecSatisfability(Specification spec);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model
	 * @generated
	 */
	VerificationResult checkSpecValidity(Specification spec);

	/**
	 * Sets the value of the '{@link org.osate.xtext.aadl2.agcl.analysis.verifiers.ModelChecker#getResourceContext <em>Resource Context</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Resource Context</em>' attribute.
	 * @see #getResourceContext()
	 * @generated
	 */
	void setResourceContext(Resource value);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model
	 * @generated
	 */
	void setUp(Resource resource);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model required="true"
	 * @generated
	 */
	VerificationResult checkModel(Model model, Specification spec);

} // ModelChecker
